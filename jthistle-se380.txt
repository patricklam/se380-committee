

This is a perennial issue.  Here are my views:

The main pedagogical objectives should be to give students some rudimentary understanding of dynamics and feedback, and to enable them to communicate with control engineers and their ilk.

SE 380 should stick to standard introductory control material. The thought of coming up with something more relevant to SE or CS students can be seductive, but I've been involved in more than one experiment of that nature, and I think it's very hard to improve on the standard presentation of introductory control engineering.

However, as I think Chris has put it before, frequency-domain design of lead and lag compensators may not be the best vehicle for teaching an understanding of feedback to software-engineering students or CS students.  If anything, I would favour simply "watering down" the standard content a bit:  maybe not worrying about design much -- just talking about absolute stability, relative stability (but not in terms of PM and GM), and steady-state error, and perhaps doing some relatively ad hoc, trial-and-error root-locus design or other pole placement.  That might leave time for more concrete examples (provided they can be treated using only very rudimentary concepts), digital implementation of analog controllers, etc.

[I've witnessed some distinguished software engineers trying make the analysis of a cruise-control system into an exercise in formal verification with temporal logic.  It would be valuable to show students how simple, versatile and effective standard methods of control-system specification can be.]

It's always tempting to think that straight digital control would be more relevant, but that requires dealing with too many wrinkles -- discretizing an analog plant, interpreting z-plane poles and zeros, etc.  Similarly, it might be tempting to stick to the time domain and to do something in state space, but I think that even with more computer-oriented students, it's best to start with classical control.  Root-locus analysis in particular seems the best way to get to the heart of the way feedback alters dynamics.

AMATH 250 is no doubt a great course, and would certainly be useful, but traditional approaches to differential equations are all about analysis (simply computing the specific response to a specific input) and consequently pay little attention to zeros, or anything else that's crucial to design and to the understanding of feedback; and these students have comparatively little opportunity to pick that sort of thing up from other courses -- unlike EE and CE students, they don't get much exposure to modelling, transfer functions, system responses or feedback in the context of circuits, for example.  (I see that Sue Ann Campbell lists a reference book for AMATH 250 called Differential Equations:  A Systems Approach, by Goldberg and Potter, but the course is a differential-equations course, so it can't cover much signals and systems.)

When sitting in a committee, it's easy to take a high-level view of things and think that, if they see the Laplace transform in a differential-equations course, it's only a short step to talking about transfer functions, but to do so is to brush under the carpet the whole of introductory signals and systems.  If students are going to go on to study any control, I think they'd be better off getting a good foundation in signals and systems rather than differential equations.  I hate to think that students might go through a whole engineering program without learning anything about differential equations, but from an engineering perspective, the classical approach to linear ODEs is subsumed by signals and systems, and it doesn't give a great deal of useful insight into nonlinear ODEs or even linear PDEs.  Students should really have both a differential-equations course and a signals-and-systems course; MATH 213 has been trying to be both.

Even if we're not going to do Bode-plot analysis and design in SE 380, I think that frequency response must be covered in MATH 213 (or its replacement).  Everyone has a vague idea of what spectra and bandwidth are these days, and I think that these students should learn some of the technical detail.  If they don't know what a low-pass filter is, there's no point in trying to talk to them about any kind of signal processing, including control. Besides, to a large extent, the availability of the frequency domain is what is special about linear systems.

So my ideal version of a preparatory course for SE 380 would be a course in (finite-dimensional) linear signals and systems, with a couple of examples of nonlinear and infinite-dimensional systems thrown in to show what sort of thing lies beyond the scope of the course.  There could also be some mention of discrete-time systems, to make things more evidently relevant -- maybe some rudimentary "digital filtering" (i.e., digital approximation of analog systems); removing the classical ODE content from MATH 213 would make room for that.  Ideally, such a course could also give them a little glimpse of communication engineering -- examples of modulation/demodulation, etc.

Just reorienting MATH 213 towards signals and systems would, I think, make the course seem more relevant, as it would be automatically more specifically oriented toward engineering.

SE 380 itself could then be a possibly watered-down introduction to analog control, with perhaps less design, especially less Bode-plot/Nyquist-plot analysis and design.  In place of the lab material on design, there could be a little more on practical aspects of digital implementation:  some simple discretization of controllers, implementation in microcontrollers [Chris has already made a great contribution in this respect], perhaps effects of common nonlinearities, etc.


-- John 
